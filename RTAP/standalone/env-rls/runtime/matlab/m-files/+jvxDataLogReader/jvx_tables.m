% This file has been written and copyright by Hauke Krueger, 
% Javox Solutions GmbH, 2011.
tableReaderCommands = { ...
    {'JVX_FIO_MX_INITIALIZE', 0, 'Initialization of filereader module'}, ...
    {'JVX_FIO_MX_OPENFILE', 1, 'Open file, input argument 1: filename'},...
    {'JVX_FIO_MX_SCANSESSIONS', 2, 'Scan for sessions in file'},...
    {'JVX_FIO_MX_RETURN_NUMBER_SESSIONS', 3, 'Return number of available sessions'},...
    {'JVX_FIO_MX_SELECT_TIMING_DIVISOR_SESSION', 4, 'Return timing divisor value for session, input argument 1: Session id (0..)'},...
    {'JVX_FIO_MX_RETURN_NUMBER_DATASETS_SESSION', 5, 'Return the number of datasets in session, input argument 1: Session id (0..)'},...
    {'JVX_FIO_MX_RETURN_DATASET_SESSION', 6, 'Return struct for a dataset, in2: Session id (0..), input argument 1: Dataset id (0..)'},...
    {'JVX_FIO_MX_RETURN_NUMBER_DATACHUNKS_SESSION', 7, 'Return number of datachunks in session, input argument 1: Session id (0..)'},...
    {'JVX_FIO_MX_RETURN_NUMBER_DATACHUNKS_SESSION_DATASET', 8, 'Return the number of datachunks for a session and a specific dataset, input argument : Session id (0..), in3: Dataset id (0..)'},...
    {'JVX_FIO_MX_RETURN_NEXT_DATACHUNK_SESSION', 9, 'Return the next datachunk in session, if files, reached end of session, input argument 1: Session id (0..)'},...
    {'JVX_FIO_MX_RETURN_NEXT_DATACHUNK_SESSION_DATASET', 10, 'Return the next datachunk in session for a specific dataset id, if files, reached end of session, input argument 1: Session id (0..), input argument 2: Dataset id (0..)'},...
    {'JVX_FIO_MX_RETURN_NEXT_DATACHUNK_SESSION_DATASET_COMPLETE_FIELD_DATA', 11, ...
        ['Copy fields in rectangular matrix. This functioncall will return more than one datachunk in one function call for speed-up.' ...
         'Input argument 1: session ID,'...
         'input argument 2: Dataset ID,'...
         'input argument 3: Number of datachunks to be returned in one field, '...
         'input argument 4: command sub ID (What to return in the field) ' ...
         'sub ID 0: Return the datafield: The input must contain a constant number of elements for each chunk, also specified in dataset (numberElementsIfConstant != -1) If the datachunks have different size than specified in the dataset, function will fail.'...
         'sub ID 1: Return the ID'...
         'sub ID 2: Return the datatype'...
         'sub ID 3: Return the user ID'...
         'sub ID 4: Return the user sub-ID'...
         'sub ID 5:Return the timing information'...
         'sub ID 6: Return the number of elements']},...
    {'JVX_FIO_MX_REWIND_SESSION', 12, 'Rewind datachunk pointer in session, input argument 1: Session id (0..)'}, ...
    {'JVX_FIO_MX_REWIND_SESSION_DATASET', 13, 'Rewind datachunk pointer in session, input argument 1: Session id (0..), input argument 2: Dataset id (0..)'},...
    {'JVX_FIO_MX_RETURN_PROGRESS_SESSION', 14, 'Return progress of session pointer, input argument 1: Session id (0..)'}, ...
    {'JVX_FIO_MX_RETURN_PROGRESS_SESSION_DATASET', 15, 'Return progress of session pointer, input argument 1: Session id (0..), input argument 2: Dataset id (0..)'},...
    {'JVX_FIO_MX_UNSCANSESSIONS', 16, 'Unscan sessions, inverse to scan.'},...
    {'JVX_FIO_MX_CLOSE_FILE', 17, 'Close the input file.'}, ...
    {'JVX_FIO_MX_TERMINATE', 18, 'Terminate filereader module.'}};

tableDataFormats = ...
{ ...
    {'JVX_DATAFORMAT_NONE', -1, 'FORMAT NOT SELECTED'}, ...
	{'JVX_DATAFORMAT_DOUBLE', 0, 'FORMAT IS DOUBLE'},...
	{'JVX_DATAFORMAT_FLOAT',  1, 'FORMAT IS FLOAT'}, ...
	{'JVX_DATAFORMAT_16BIT_LE', 2, 'FORMAT IS 16 BIT LITTLE ENDIAN'},...
	{'JVX_DATAFORMAT_24BIT_LE', 3, 'FORMAT IS 24 BIT LITTLE ENDIAN'},...
	{'JVX_DATAFORMAT_32BIT_LE', 4, 'FORMAT IS 32 BIT LITTLE ENDIAN'}, ...
	{'JVX_DATAFORMAT_8BIT', 5, 'FORMAT IS 8 BIT (BYTE)'},...
	{'JVX_DATAFORMAT_STRING', 6, 'CHARACTER STRING'},...
	{'JVX_DATAFORMAT_VOID', 7, 'FORMAT IS VOID FOR ALL OTHER FORMATS'}...
};
