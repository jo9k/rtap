#ifndef __TJVXSEQUENCER_H__
#define __TJVXSEQUENCER_H__

typedef enum
{
	JVX_SEQUENCER_TYPE_COMMAND_NONE = 0,

	// A standard command to address to one of the components to initiate state change commands
	JVX_SEQUENCER_TYPE_COMMAND_STD_ACTIVATE,
	JVX_SEQUENCER_TYPE_COMMAND_STD_PREPARE,
	JVX_SEQUENCER_TYPE_COMMAND_STD_START,
	JVX_SEQUENCER_TYPE_COMMAND_STD_STOP,
	JVX_SEQUENCER_TYPE_COMMAND_STD_POSTPROCESS,
	JVX_SEQUENCER_TYPE_COMMAND_STD_DEACTIVATE,

	// Wait condition command
	JVX_SEQUENCER_TYPE_CONDITION_WAIT,

	// Conditional jump
	JVX_SEQUENCER_TYPE_CONDITION_JUMP,

	// Unconditional jump
	JVX_SEQUENCER_TYPE_JUMP,

	// Component specific command addressed by function_id
	JVX_SEQUENCER_TYPE_COMMAND_SPECIFIC,

	// Wait until someone pushes "stop"
	JVX_SEQUENCER_TYPE_WAIT_FOREVER,

	// Conditional relative jump
	JVX_SEQUENCER_TYPE_WAIT_CONDITION_RELATIVE_JUMP,

	// Break current loop step processing call
	JVX_SEQUENCER_TYPE_BREAK,

	JVX_SEQUENCER_TYPE_REQUEST_UPDATE_VIEWER,
	
	JVX_SEQUENCER_TYPE_REQUEST_START_IN_PROCESSING_LOOP,

	JVX_SEQUENCER_TYPE_REQUEST_STOP_IN_PROCESSING_LOOP,

	JVX_SEQUENCER_TYPE_CALLBACK,
	
	JVX_SEQUENCER_TYPE_COMMAND_LIMIT

} jvxSequencerElementType;

typedef enum
{
	JVX_SEQUENCER_EVENT_NONE = 0,
	JVX_SEQUENCER_EVENT_PROCESS_STARTUP_COMPLETE = 0x1,
	JVX_SEQUENCER_EVENT_SUCCESSFUL_COMPLETION_STEP = 0x2,
	JVX_SEQUENCER_EVENT_INCOMPLETE_COMPLETION_STEP_ERROR = 0x4,
	JVX_SEQUENCER_EVENT_SUCCESSFUL_COMPLETION_SEQUENCE = 0x8,
	JVX_SEQUENCER_EVENT_INCOMPLETE_COMPLETION_SEQUENCE_ERROR = 0x10,
	JVX_SEQUENCER_EVENT_INCOMPLETE_COMPLETION_SEQUENCE_ABORT = 0x20,
	JVX_SEQUENCER_EVENT_SUCCESSFUL_COMPLETION_PROCESS = 0x40,
	JVX_SEQUENCER_EVENT_INCOMPLETE_COMPLETION_PROCESS_ERROR = 0x80,
	JVX_SEQUENCER_EVENT_INCOMPLETE_COMPLETION_PROCESS_ABORT = 0x100,
	JVX_SEQUENCER_EVENT_PROCESS_TERMINATED = 0x200
} jvxSequencerEvent;

typedef enum
{
	JVX_SEQUENCER_STATUS_NONE = 0,
	JVX_SEQUENCER_STATUS_STARTUP,
	JVX_SEQUENCER_STATUS_IN_OPERATION,
	JVX_SEQUENCER_STATUS_WAITING,
	JVX_SEQUENCER_STATUS_WANTS_TO_SHUTDOWN,
	JVX_SEQUENCER_STATUS_SHUTDOWN_IN_PROGRESS,
	JVX_SEQUENCER_STATUS_ERROR,
	JVX_SEQUENCER_STATUS_SHUTDOWN_COMPLETE
} jvxSequencerStatus;

typedef enum
{
	JVX_SEQUENCE_STATE_NONE = 0,
	JVX_SEQUENCE_STATE_IN_PROCESSING,
} jvxProcessState;

typedef enum
{
	JVX_SEQUENCER_QUEUE_TYPE_NONE = 0,
	JVX_SEQUENCER_QUEUE_TYPE_RUN,
	JVX_SEQUENCER_QUEUE_TYPE_LEAVE,
	JVX_SEQUENCER_QUEUE_TYPE_LIMIT
} jvxSequencerQueueType;

typedef enum
{
	JVX_SEQUENCER_EDIT_STEP_DESCRIPTION = 0x1,
	JVX_SEQUENCER_EDIT_STEP_LABEL_FALSE = 0x2,
	JVX_SEQUENCER_EDIT_STEP_LABEL_TRUE = 0x4,
	JVX_SEQUENCER_EDIT_STEP_FID = 0x8,
	JVX_SEQUENCER_EDIT_STEP_LABEL = 0x10,
	JVX_SEQUENCER_EDIT_STEP_TARGET = 0x20,
	JVX_SEQUENCER_EDIT_STEP_TIMEOUT = 0x40,
	JVX_SEQUENCER_EDIT_STEP_TYPE = 0x80
} jvxSequencerEditTargetEnum;

#endif
